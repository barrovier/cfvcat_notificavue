swagger: "2.0"
info:
  description: "Documentació de l'API de la web de notificació de TG."
  version: "1.0.0"
  title: "API notiTG"
  contact:
    email: "xb.ficf@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "per.determin.ar"
basePath: "/v1"
tags:
- name: "usuari"
  description: "Gestió d'usuari"
- name: "notificacio"
  description: "Gestió de les notificacions"
schemes:
- "https"
paths:
  /usuari:
    post:
      tags:
      - "usuari"
      summary: "Registrar usuari"
      description: "No cal tenir autorització per enregistrar un usuari.\\nLa creació finalitza amb l'enviament d'un email a l'adreça enregistrada per verificar-ne l'email. L'enllaç que s'envia conté un token que es valida via API"
      operationId: "registrarUsuari"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objecte JSON que representa l'usuari a crear"
        required: true
        schema:
          $ref: "#/definitions/Usuari"
      responses:
        default:
          description: "successful operation"
  /usuari/verifica/{token}:
    get:
      tags:
      - "usuari"
      summary: "Verificar registre usuari"
      description: "El token porta el id d'usuari a verificar"
      operationId: "verificaEmailUsuari"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "El token és un JWT que porta el ID d'usuari per donar el seu email com a verificat"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /usuari/login:
    get:
      tags:
      - "usuari"
      summary: "Login de l'usuari en l'apliucació de notificació de TG"
      description: ""
      operationId: "loginUsuari"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /usuari/logout:
    get:
      tags:
      - "usuari"
      summary: "Tancar la sessió de l'usuari loginat"
      description: ""
      operationId: "logoutUsuari"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
      security:
      - api_key: []
  /usuari/{email}:
    get:
      tags:
      - "usuari"
      summary: "Recuperar la info de l'usuari"
      description: "Només ho pot fer l'usuari loginat sobre ell mateix"
      operationId: "recuperaUsuari"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "path"
        description: "L'adreça email de l'usuari a recuperar"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Usuari"
        "400":
          description: "Invalid email supplied"
        "404":
          description: "User not found"
      security:
      - api_key: []
    put:
      tags:
      - "usuari"
      summary: "Actualitzar l'usuari"
      description: "Només ho pot fer l'usuari loginat sobre ell mateix"
      operationId: "actualitzaUsuari"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "path"
        description: "Adreça email de l'usuari"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/Usuari"
      responses:
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
      security:
      - api_key: []
  /notificacio:
    post:
      tags:
      - "notificacio"
      summary: "Afegeix una nova notificacio"
      description: ""
      operationId: "afegirNotificacio"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Representació de la otificacio com a objecte JSON"
        required: true
        schema:
          $ref: "#/definitions/Notificacio"
      responses:
        "200":
          description: "successful operation"
        "405":
          description: "Invalid input"
      security:
      - api_key: []
  /notificacio/{notificacioId}:
    get:
      tags:
      - "notificacio"
      summary: "Recupera notificacio segons ID"
      description: "Carrega una notificacio determinada propietat de l'usuari loginat"
      operationId: "carregaNotificacio"
      produces:
      - "application/json"
      parameters:
      - name: "notificacioId"
        in: "path"
        description: "ID de la notificació a recuperar"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Notificacio"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Noti not found"
      security:
      - api_key: []
    put:
      tags:
      - "notificacio"
      summary: "Actualització d'una notificació propietat de l'usuari loginat"
      description: ""
      operationId: "actualitzaNotificacio"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "notificacioId"
        in: "path"
        description: "ID de la notificació a actyualitzar"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Representació de la notificació com a objecte JSON"
        required: true
        schema:
          $ref: "#/definitions/Notificacio"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Noti not found"
        "405":
          description: "Validation exception"
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-user-token"
    in: "header"
definitions:
  Usuari:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Medicacio:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Notificacio:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      medicacions:
        type: "array"
        items:
          $ref: "#/definitions/Medicacio"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
